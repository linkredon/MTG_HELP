/* Efeitos de brilho para os cards */
.quantum-card-dense {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

/* Efeito de borda brilhante ao passar o mouse */
.quantum-card-dense::before {
  content: '';
  position: absolute;
  inset: 0;
  padding: 1px;
  border-radius: inherit;
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.7),
    rgba(139, 92, 246, 0.5),
    rgba(16, 185, 129, 0.4),
    rgba(245, 165, 36, 0.5)
  );
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.quantum-card-dense:hover::before {
  opacity: 1;
}

/* Efeito de brilho interno ao passar o mouse */
.quantum-card-dense::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    rgba(59, 130, 246, 0.15) 0%,
    rgba(139, 92, 246, 0.1) 25%,
    rgba(0, 0, 0, 0) 50%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.quantum-card-dense:hover::after {
  opacity: 1;
}

/* Variações de cores para diferentes tipos de cards */
.card-blue::before {
  background: linear-gradient(
    135deg,
    rgba(59, 130, 246, 0.8),
    rgba(37, 99, 235, 0.5)
  );
}

.card-purple::before {
  background: linear-gradient(
    135deg,
    rgba(139, 92, 246, 0.8),
    rgba(124, 58, 237, 0.5)
  );
}

.card-green::before {
  background: linear-gradient(
    135deg,
    rgba(16, 185, 129, 0.8),
    rgba(5, 150, 105, 0.5)
  );
}

.card-orange::before {
  background: linear-gradient(
    135deg,
    rgba(245, 165, 36, 0.8),
    rgba(217, 119, 6, 0.5)
  );
}

/* Nota: O script para acompanhar o movimento do mouse deve ser movido para um arquivo JavaScript separado */
/* 
Exemplo de como implementar em JavaScript:

document.addEventListener('DOMContentLoaded', function() {
  const cards = document.querySelectorAll('.quantum-card-dense');
  
  cards.forEach(card => {
    card.addEventListener('mousemove', function(e) {
      const rect = card.getBoundingClientRect();
      const x = ((e.clientX - rect.left) / rect.width) * 100;
      const y = ((e.clientY - rect.top) / rect.height) * 100;
      
      card.style.setProperty('--x', `${x}%`);
      card.style.setProperty('--y', `${y}%`);
    });
  });
});
*/